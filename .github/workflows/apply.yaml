---

name: Terraform apply

on:
  pull_request:
    types: [labeled]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required for adding comments to the PR
  actions: read # For downloading the plan artifact

jobs:

  apply:
    name: "Apply"
    runs-on: ubuntu-latest
    if: github.event.label.name == 'ready to apply'

    env:
      AWS_REGION: us-east-1
      AWS_ACCOUNT_ID: '012345678910'
      DEPLOYMENT_KEY: 'datadog-terraform'
      DEPLOYMENT_DESC: '### **Deployment** ###'

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v3

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.9

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GithubActionsTFStateUser
          role-session-name: GitHubActions
          aws-region: ${{ env.AWS_REGION }}

      - name: Clean deployment for artifact name
        run: |
          MODULE="${{ env.DEPLOYMENT_KEY }}"
          echo "SANITIZED=${MODULE//[\/:]/-}" >> "$GITHUB_ENV"

      - name: Download plan
        id: download-plan
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: plan.yaml
          pr: ${{ github.event.pull_request.number }}
          name: ${{ github.event.number }}-${{ env.SANITIZED }}-tf-plan
          path: /tmp
          search_artifacts: true

      - name: Terraform apply
        id: apply
        run: |
          cd deployment \
          && terraform init \
          && terraform apply -no-color -input=false /tmp/tfplan
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
          DD_APP_KEY: ${{ secrets.DD_APP_KEY }}
          DD_API_URL: "https://api.datadoghq.com"
        continue-on-error: true

      - uses: mshick/add-pr-comment@v2
        with:
          allow-repeats: true
          message: |
            ${{ env.DEPLOYMENT_DESC }}

            **Apply result**: ${{ steps.apply.outcome }}

            Apply output:

            **stdout**:
            ```diff
            ${{ steps.apply.outputs.stdout }}
            ```

            **stderr**:
            ```
            ${{ steps.apply.outputs.stderr }}
            ```

            *Applied by: @${{ github.actor }}*

      - name: Add applied label to PR
        if: steps.apply.outcome == 'success'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['applied']
            })

      - name: Add failed to apply label to PR
        if: steps.apply.outcome == 'failure'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['failed to apply']
            })

      - name: Remove ready to apply label from PR
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'ready to apply'
            })
        continue-on-error: true

      - if: steps.apply.outcome == 'failure'
        run: exit 1


